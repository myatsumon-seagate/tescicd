node {
    def commit_id
   stage('Preparation') {
     checkout scm
     sh "git rev-parse --short HEAD > .git/commit-id"                        
     commit_id = readFile('.git/commit-id').trim()
   }
   stage('Testing') {
     nodejs(nodeJSInstallationName: 'NodeJS') {
       sh 'npm install --only=dev'
       sh 'npm test'
     }
   }
   stage('Build') {
     
      //   docker.withRegistry('https://index.docker.io/v1/', 'sumon-dockerhub') {
      //   def customImage = docker.build("myatsumon/testcicd:${commit_id}")
      //   customImage.push()
      //   customImage.push('latest')
      // }
      docker.build("myatsumon/testcicd:${commit_id}")

   }

    stage('sonar-scanner') {
      def sonarqubeScannerHome = tool name: 'sonar', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
      withCredentials([string(credentialsId: 'sonar', variable: 'sonarLogin')]) {
        sh "${sonarqubeScannerHome}/bin/sonar-scanner -e -Dsonar.host.url=http://sonarqube:9000 -Dsonar.login=${sonarLogin} -Dsonar.projectName=test-node -Dsonar.projectVersion=${env.BUILD_NUMBER} -Dsonar.projectKey=TN -Dsonar.sources=complete/src/main/ -Dsonar.tests=complete/src/test/ -Dsonar.language=node"
      }
    }
}
